B.sh
evdev-1.7.1.tar.gz
file.txt
keyboard-0.13.5-py3-none-any.whl
poo.py
pynput-1.7.7-py2.py3-none-any.whl
python_xlib-0.33-py2.py3-none-any.whl
Readme.txt
six-1.16.0-py2.py3-none-any.whl
Requirement already satisfied: keyboard in ./myenv/lib64/python3.11/site-packages (0.13.5)

[g@fedora Beath_keys]$ ls
breath.sh
evdev-1.7.1.tar.gz
file.txt
keyboard-0.13.5-py3-none-any.whl
myenv
poo.py
pynput-1.7.7-py2.py3-none-any.whl
python_xlib-0.33-py2.py3-none-any.whl
Readme.txt
six-1.16.0-py2.py3-none-any.whl
[g@fedora Beath_keys]$ . breath.sh 
Requirement already satisfied: keyboard in ./myenv/lib64/python3.11/site-packages (0.13.5)

[notice] A new release of pip available: 22.3.1 -> 24.2
[notice] To update, run: pip install --upgrade pip
Traceback (most recent call last):
  File "/home/g/Project/Beath_keys/poo.py", line 1, in <module>
    from pynput import keyboard
ModuleNotFoundError: No module named 'pynput'
[g@fedora Beath_keys]$ 

somthing like this? will it work if i move these into a folder to tidy it up?
this goes in the breath.sh like this?
pip install /offline_lib/keyboard-0.13.5-py3-none-any.whl

pip install /offline_lib /pynput-1.7.7-py2.py3-none-any.whlu:



[g@fedora ~]$ /home/g/Project/Beath_keys/breath.sh
Processing ./offline_lib/keyboard-0.13.5-py3-none-any.whl
keyboard is already installed with the same version as the provided wheel. Use --force-reinstall to force an installation of the wheel.

[notice] A new release of pip available: 22.3.1 -> 24.2
[notice] To update, run: pip install --upgrade pip
Processing ./offline_lib/pynput-1.7.7-py2.py3-none-any.whl
Collecting six
  Using cached six-1.16.0-py2.py3-none-any.whl (11 kB)
Collecting evdev>=1.3
  Using cached evdev-1.7.1.tar.gz (30 kB)
  Installing build dependencies ... done
  Getting requirements to build wheel ... done
  Preparing metadata (pyproject.toml) ... done
Collecting python-xlib>=0.17
  Using cached python_xlib-0.33-py2.py3-none-any.whl (182 kB)
Building wheels for collected packages: evdev
  Building wheel for evdev (pyproject.toml) ... error
  error: subprocess-exited-with-error
  
  × Building wheel for evdev (pyproject.toml) did not run successfully.
  │ exit code: 1
  ╰─> [40 lines of output]
      running bdist_wheel
      running build
      running build_py
      creating build
      creating build/lib.linux-x86_64-cpython-311
      creating build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/__init__.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/device.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/ecodes.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/eventio.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/eventio_async.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/events.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/evtest.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/ff.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/genecodes.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/uinput.py -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/util.py -> build/lib.linux-x86_64-cpython-311/evdev
      running egg_info
      writing evdev.egg-info/PKG-INFO
      writing dependency_links to evdev.egg-info/dependency_links.txt
      writing top-level names to evdev.egg-info/top_level.txt
      reading manifest file 'evdev.egg-info/SOURCES.txt'
      reading manifest template 'MANIFEST.in'
      warning: no previously-included files found matching 'evdev/ecodes.c'
      adding license file 'LICENSE'
      writing manifest file 'evdev.egg-info/SOURCES.txt'
      copying evdev/input.c -> build/lib.linux-x86_64-cpython-311/evdev
      copying evdev/uinput.c -> build/lib.linux-x86_64-cpython-311/evdev
      running build_ext
      running build_ecodes
      writing /tmp/pip-install-4ytex8c6/evdev_d3e35b11abf449c2a0b663f4d9b87e50/evdev/ecodes.c (using /usr/include/linux/input.h /usr/include/linux/input-event-codes.h /usr/include/linux/uinput.h)
      building 'evdev._input' extension
      creating build/temp.linux-x86_64-cpython-311
      creating build/temp.linux-x86_64-cpython-311/evdev
      gcc -Wsign-compare -DDYNAMIC_ANNOTATIONS_ENABLED=1 -DNDEBUG -O2 -fexceptions -g -grecord-gcc-switches -pipe -Wall -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -O2 -fexceptions -g -grecord-gcc-switches -pipe -Wall -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -O2 -fexceptions -g -grecord-gcc-switches -pipe -Wall -Werror=format-security -Wp,-U_FORTIFY_SOURCE,-D_FORTIFY_SOURCE=3 -Wp,-D_GLIBCXX_ASSERTIONS -fstack-protector-strong -m64 -mtune=generic -fasynchronous-unwind-tables -fstack-clash-protection -fcf-protection -fPIC -I/home/g/Project/Beath_keys/myenv/include -I/usr/include/python3.11 -c evdev/input.c -o build/temp.linux-x86_64-cpython-311/evdev/input.o -std=c99 -Wno-error=declaration-after-statement
      evdev/input.c:10:10: fatal error: Python.h: No such file or directory
         10 | #include <Python.h>
            |          ^~~~~~~~~~
      compilation terminated.
      error: command '/usr/bin/gcc' failed with exit code 1
      [end of output]
  
  note: This error originates from a subprocess, and is likely not a problem with pip.
  ERROR: Failed building wheel for evdev
Failed to build evdev
ERROR: Could not build wheels for evdev, which is required to install pyproject.toml-based projects

[notice] A new release of pip available: 22.3.1 -> 24.2
[notice] To update, run: pip install --upgrade pip
Traceback (most recent call last):
  File "/home/g/Project/Beath_keys/poo.py", line 1, in <module>
    from pynput import keyboard
ModuleNotFoundError: No module named 'pynput'
ChatGPT said:
ChatGPT

The error you're encountering stems from missing dependencies required to build the evdev package from source. Specifically, the error:

yaml

fatal error: Python.h: No such file or directory

indicates that the Python development headers are not installed on your system. The Python.h header file is part of the Python development package, which is necessary for compiling Python extensions written in C.
Steps to Fix the Issue

    Install Python Development Headers:

    You need to install the Python development package for your version of Python. Since you're using Fedora, you can use the following command to install the necessary development tools and libraries:

    bash

sudo dnf install python3-devel gcc

This command installs the Python development headers (python3-devel) and the GNU Compiler Collection (gcc), which is required to compile Python extensions.

Retry Installing Packages in Your Virtual Environment:

After installing the necessary development headers, activate your virtual environment again and run the breath.sh script:

bash

source /home/g/Project/Beath_keys/myenv/bin/activate
/home/g/Project/Beath_keys/breath.sh

If you still encounter errors related to package installation, try using --force-reinstall to reinstall the keyboard package:

bash

    pip install --force-reinstall ./offline_lib/keyboard-0.13.5-py3-none-any.whl
    pip install ./offline_lib/pynput-1.7.7-py2.py3-none-any.whl

    Install Dependencies from Local Wheel Files:

    Ensure the offline_lib folder contains all required wheel files (keyboard, pynput, and any other dependencies like evdev and python-xlib).

Modified breath.sh Script

After installing the Python development headers and other required tools, you can try running this script again:

bash

#!/bin/bash
cd /home/g/Project/Beath_keys # Ensure we're in the correct directory

python3 -m venv myenv

source myenv/bin/activate

# Install the libraries from the local wheel files, forcing reinstall if necessary
pip install --force-reinstall ./offline_lib/keyboard-0.13.5-py3-none-any.whl
pip install ./offline_lib/pynput-1.7.7-py2.py3-none-any.whl

# Run your Python script
python poo.py

deactivate

Summary

    Install the Python development headers to resolve the Python.h not found error.
    Use --force-reinstall if necessary to ensure packages are installed properly.
    Run the script again after making these changes.

These steps should resolve the errors you're facing, and allow your script to run successfully.
